doctype html

form([formGroup]="form", (ngSubmit)="submit()")
  mat-sidenav-container
    mat-sidenav(position="end", #filter, [mode]="'side'", [fixedInViewport]="true",  [opened]="isFiltersOpened")
      .form-field
        label Dates
        .dates
          input(matInput, type="text", 
            (dateChange)="form.get('dateFrom').setValue(formatDateISO($event.value))",
            [matDatepicker]="dateFromEl",
            [value]="form.get('dateFrom').value",
            (click)="dateFromEl.open()"
          )
          mat-datepicker(#dateFromEl)
    
          input(matInput, type="text", 
            (dateChange)="form.get('dateTo').setValue(formatDateISO($event.value))",
            [matDatepicker]="dateToEl",
            [value]="form.get('dateTo').value",
            (click)="dateToEl.open()"
          )
          mat-datepicker(#dateToEl, [disabled]="false")

      .form-field
        label Sorting
        .sort
          input(id="playerFilterSortName", type="radio", formControlName="orderBy", value="name", (click)="resetIfChecked('orderBy', $event.target.value)")
          label(for="playerFilterSortName") Name
  
          input(id="playerFilterSortTeam", type="radio", formControlName="orderBy", value="team", (click)="resetIfChecked('orderBy', $event.target.value)")
          label(for="playerFilterSortTeam") Team
  
          input(id="playerFilterSortPosition", type="radio", formControlName="orderBy", value="role", (click)="resetIfChecked('orderBy', $event.target.value)")
          label(for="playerFilterSortPosition") Position
  
          input(id="playerFilterSortCountry", type="radio", formControlName="orderBy", value="country", (click)="resetIfChecked('orderBy', $event.target.value)")
          label(for="playerFilterSortCountry") Country

      .form-field
        .sort
          input(id="internationalTrue", type="radio", formControlName="international", [value]="true", (click)="resetIfChecked('international', $event.target.checked)")
          label(for="internationalTrue", [style.width.%]="100") International

      .form-field
        range-slider-form-control(label="Goals", [min]="1", [max]="100", [formControlName]="'goals'")

      .form-field
        range-slider-form-control(label="Assists", [min]="0", [max]="100", [formControlName]="'assists'")

      .form-field
        range-slider-form-control(label="Cards", [min]="1", [max]="100", [formControlName]="'cards'")

      .form-field
        range-slider-form-control(label="Height", [min]="150", [max]="250", [formControlName]="'height'")

      .form-field
        range-slider-form-control(label="Age", [min]="15", [max]="64", [formControlName]="'age'")

      .form-field
        range-slider-form-control(label="Time played", [min]="0", [max]="5000", [formControlName]="'playTime'")
        
      .form-field
        label Team
        .input-box
          input(type="text", formControlName="teamName", [matAutocomplete]="autocompleteTeam", (input)="setPending(form.get('teamName').value!='')")
          .clear(*ngIf="form.get('teamName').value", (click)="form.get('teamName').reset(); form.get('teamId').reset();") × 
          mat-autocomplete(#autocompleteTeam="matAutocomplete", (optionSelected)="setPending(false)")
            mat-option(
              *ngFor="let team of teamsAutocomplete | async", 
              [value]="team.name",
              [title]="team.name",
              (onSelectionChange)="form.get('teamId').setValue(team.id)"
            ) {{ team.name }}

      .form-field
        label League
        .input-box
          input(type="text", formControlName="leagueName", [matAutocomplete]="autocompleteLeague", (input)="setPending(form.get('leagueName').value!='')")
          .clear(*ngIf="form.get('leagueName').value", (click)="form.get('leagueName').reset(); form.get('leagueId').reset()") × 
          mat-autocomplete(#autocompleteLeague="matAutocomplete", (optionSelected)="setPending(false)")
            mat-optgroup(*ngFor="let groupedLeague of leaguesAutocomplete | async", [label]="groupedLeague.groupBy")
              mat-option(
                *ngFor="let league of groupedLeague.leagues", 
                [value]="league.name",
                [title]="league.name",
                (onSelectionChange)="form.get('leagueId').setValue(league.id)"
              ) {{ league.name }}

      .form-field
        label Position
        .input-box
          input(matInput, type="text", formControlName="role", [matAutocomplete]="autocompletePos")
          .clear(*ngIf="form.get('role').value", (click)="form.get('role').reset()") ×
          mat-autocomplete(#autocompletePos="matAutocomplete")
            mat-option(*ngFor="let role of playerRoles", [value]="role") {{ role | titlecase }}

      .form-field.disabled
        label Nationality
        .input-box
          input(type="text", formControlName="nationalityId", placeholder="Not implemented yet")
          .clear(*ngIf="form.get('nationalityId').value", (click)="form.get('nationalityId').reset()") ×


      .form-field
        button(type="submit", [disabled]="isLoading || form.invalid", mat-stroked-button, color="primary") Show players
    

    mat-sidenav-content([class.disabled]="isLoading")
      input.search-input(type="text", formControlName="playerName")
      .toogle-filter([class.opened]="isFiltersOpened", (click)="isFiltersOpened = !isFiltersOpened") 
        div Filters
      router-outlet